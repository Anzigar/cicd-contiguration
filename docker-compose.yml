services:
  ci-cd:
    build: .
    container_name: cicd-container
    restart: always
    volumes:
      - ./db:/app/db
    networks:
      - proxy
    ports:
      - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.ci-cd.rule=Host(`ci-cd.safaripro.net`)"
      - "traefik.http.routers.ci-cd.entrypoints=websecure"
      - "traefik.http.routers.ci-cd.tls=true"
      - "traefik.http.routers.ci-cd.tls.certresolver=letsencrypt"
      - "traefik.http.services.ci-cd.loadbalancer.server.port=8000"
    environment:
      - PORT=8000
      - HOST=0.0.0.0
      - ENVIRONMENT=production
    depends_on:
      - traefik
      
  traefik:
    image: traefik:2.8
    container_name: traefik
    restart: unless-stopped
    networks:
      - proxy
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik.yml:/traefik.yml:ro"
      - "./acme.json:/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.safaripro.net`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      
volumes:
  db_data:
    
networks:
  proxy:
    external: true